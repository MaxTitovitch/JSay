openapi: 3.0.0
info:
  title: JSay API
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /preregister:
    post:
      summary: ''
      operationId: post-preregister
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  name:
                    type: string
                  phone:
                    type: string
                  fcmtoken:
                    type: string
                required:
                  - status
      description: 'Проверяет, есть ли такие аккаунты, если нет - то делает пререгистрацию, пре - потому что в следующем запросе будет код-подтверждение на регистрацию, а также отправляет код в приложение через FCM-токен, полученный в данном запросе'
      parameters:
        - schema:
            type: string
          in: query
          name: phone
          description: Номер пользователя
        - schema:
            type: string
          in: query
          name: name
          description: Имя пользователя
        - schema:
            type: string
          in: query
          name: fcmtoken
          description: FCM-токен
  /register:
    post:
      summary: ''
      operationId: post-register
      responses:
        '200':
          description: '{status: ''success'', token: result.value.token}'
      description: 'Проверяет корректность кода, и если он правильный - то регистрирует юзера, который отправил заявку на регистрацию. '
      parameters:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  code:
                    type: string
                required:
                  - status
components:
  schemas: {}
